<div class="deck-container">
    <section class="slide" id="title-slide">
        <h1>http://socialslide.<br />herokuapp.com</h1>
    </section>

    <section class="slide">
    	<h2>2006年</h2>
        <div class="slide">
            <img src="/images/rails.png" />
            <h3 class="center">3分ハッキング</h3>
        </div>
	</section>
	
	<section class="slide">
        <h2>今日のトピック</h2>
		<ul>
			<li><h3 class="slide">リアルタイム</h3></li>
			<li><h3 class="slide">モバイル</h3></li>
			<li><h3 class="slide">クラウド</h3></li>
		</ul>
	</section>

    <section class="slide">
        <h1>イノベーション</h1>
    </section>

	<section class="slide">
	    <h1>Webシステムの現状は？</h1>    
	</section>

	<section class="slide">
		<h2>リアルタイム</h2>
        <ul>
            <li><h3 class="slide">基本、ポーリング</h3></li>
            <li><h3 class="slide">Pushもあるが</h3></li>
            <li><h3 class="slide">性能上の欠陥あり</h3></li>
        </ul>
	</section>

    <section class="slide">
		<h2>性能上の欠陥</h2>
        <h1>C10K Problem</h1>
        <a style="position:absolute; right: 50px; bottom:150px" href="http://www.hyuki.com/yukiwiki/wiki.cgi?TheC10kProblem" target="_blank">詳細はこちら</a>
	</section>

    <section class="slide">
    	<h2>C10K Problem</h2>
        <ul>
            <li><h3>1スレッドあたりのスタックサイズは2MB</h3></li>
            <li><h3>カーネルのコンテキストスイッチは重い</h3></li>
        </ul>
	</section>

    <section class="slide">
        <h2>カーネル</h2>
        <img src="/images/kernel.png" width="525" height="421" />
    </section>

    <section class="slide">
        <h2>モバイル</h2>
        <ul style="font-size: xx-large;">
            <li>iOS</li>
            <li>Android</li>
            <li>WindowsPhone</li>
            <li>WebOS</li>
            <li>Black Berry</li>
            <li>Symbian</li>
        </ul>
    </section>

    <section class="slide">
        <h2>モバイル</h2>
        <ul>
            <li><h3 class="slide">iOSとAndroid以外は?</h3></li>
            <li><h3 class="slide">チャネルで異なる実装</h3></li>
            <li><h3 class="slide">メンテナンスコスト大</h3></li>
        </ul>
    </section>

    <section class="slide">
        <h2>クラウドと言えば</h2>
        <ul class="slide">
            <li><h3>Google</h3></li>
            <li><h3>Sales Force.com</h3></li>
            <li><h3>Amazon</h3></li>
        </ul>
    </section>

    <section class="slide">
        <h2>クラウドと言えば</h2>
        <h1 class="slide" style="top:200px">Voyager Trading Cloud!</h1>
    </section>

    <section class="slide">
        <h2>Voyager Trading Cloud</h2>
        <h1>仮想IPの付け替え</h1>
    </section>

    <section class="slide">
        <h2>現状</h2>
		<ul>
			<li><h3>×リアルタイム</h3></li>
			<li><h3>×モバイル</h3></li>
			<li><h3>×クラウド</h3></li>
		</ul>
	</section>

    <section class="slide">
        <h1>イノベーション</h1>
    </section>

    <section class="slide">
        <h1>Complex FX</h1>
    </section>

    <section class="slide">
        <h2>Complex FX</h2>
    	<ul>
			<li><h3>○リアルタイム</h3></li>
			<li><h3>○モバイル</h3></li>
			<li><h3>○クラウド</h3></li>
		</ul>
	</section>

    <section class="slide">
        <h1><a href="http://complexfx.herokuapp.com/" target="_blank">Demo</a></h1>
	</section>

    <section class="slide">
        <h2>Complex FXのすごいところ</h2>
        <ul>
			<li><h3>全てがリアルタイム</h3></li>
			<li><h3>全てのモバイルで動く</h3></li>
			<li><h3>負荷に強い</h3></li>
		</ul>
	</section>


    <section class="slide">
        <h2>リアルタイム</h2>
        <ul>
			<li><h3>Node.js + Socket.IO</h3></li>
			<li><h3>非同期IOによる効率化</h3></li>
			<li><h3>WebSocketによる高速化</h3></li>
		</ul>
	</section>

    <section class="slide">
        <h2>Node.jsとは</h2>
        <ul>
            <li><h4>サーバーサイドJavaScript</h4></li>
            <li><h4>v8 JavaScript Engine</h4></li>
            <li><h4>イベントループ</h4></li>
        </ul>
    </section>

    <section class="slide">
        <h2>スレッドモデル (Tomcat, Apache)</h2>
        <ul>
            <li><h4>1接続に対して1スレッドが処理</h4></li>
            <li><h4>ブロッキングしてもよいがスレッドが足りなくなる</h4></li>
            <li><h4>コードの見通しが良い</h4></li>
		</ul>
	</section>

    <section class="slide">
        <h2>イベントループモデル(Node.js, nginx)</h2>
        <ul>
            <li><h4>複数接続を1スレッドが処理</h4></li>
            <li><h4>ブロッキングすると全体が止まる</h4></li>
            <li><h4>コードの見通しが悪い</h4></li>
    	</ul>
	</section>

    <section class="slide">
        <h2>Node.js</h2>
        <ul>
            <li><h4>資源使用率はイベントループが優秀</h4></li>
            <li><h4>非同期IOを強制してブロッキングを排除したい</h4></li>
            <li><h4>JavaScriptはもともと全てが非同期</h4></li>
        </ul>
	</section>

    <section class="slide">
        <h2>Socket.IO</h2>
        <h4>クライアントに応じて接続方式を自動的に決定</h4>
        <ul>
            <li>WebSocket</li>
            <li>Flash Socket</li>
            <li>Ajax long polling</li>
            <li>Ajax multipart streaming</li>
            <li>Forever IFrame</li>
            <li>JSONP Polling</li>
        </ul>
	</section>

    <section class="slide">
        <h2>WebSocket</h2>
        <div style="float:left">
            <h4>従来のhttp</h4>
            <img src="/images/before_websocket.png" />
        </div>
        <div style="float:left; margin-left:50px">
            <h4 >WebSocket</h4>
            <img src="/images/websocket.png" />
        </div>
	</section>

    <section class="slide">
        <h2>モバイル</h2>
        <h1>HTML5</h1>
    </section>

    <section class="slide">
        <h2>モバイル</h2>
        <ul>
            <li><h3>PhoneGap</h3></li>
            <li><h3>Titanium Mobile</h3></li>
        </ul>
    </section>

    <section class="slide">
        <h2>PhoneGap</h2>
        <img src="/images/phonegap.png" width="840" height="336"/>
    </section>

    <section class="slide">
        <h2>クラウド</h2>
        <h1>heroku</h1>
	</section>

    <section class="slide">
        <h2>herokuとは何か</h2>
        <h1>日本大好きアメリカ人が作ったPaas</h1>
    </section>
    
    <section class="slide">
        <h2>heroku user group</h2>
        <img src="/images/hug-sign.png" width="585" height="403"/>
    </section>


    <section class="slide">
        <h2>heroku</h2>
        <ul>
            <li><h3>ハードからの解放</h3></li>
            <li><h3>スピーディにスケール</h3></li>
        </ul>
    </section>

    <section class="slide">
        <h2>スピーディにスケールしない場合</h2>
        <ul>
            <li><h3>見守る</h3></li>
            <li><h3>祈る</h3></li>
            <li><h3>障害対応</h3></li>
        </ul>
    </section>

    <section class="slide">
        <h2>祈るのはもうやめにしたい</h2>
        <img src="/images/inori.jpg" width="600" height="400" />
    </section>

    <section class="slide">
        <h2>スピーディにスケール</h2>
        <h1>heroku scale<br /> web=8 worker=2</h1>
    </section>
 
    <section class="slide">
        <h1>まとめ</h1>
    </section>

    <section class="slide">
        <h2>Complex FX</h2>
        <ul>
			<li><h3>○リアルタイム</h3></li>
			<li><h3>○モバイル</h3></li>
			<li><h3>○クラウド</h3></li>
		</ul>
	</section>

    <section class="slide">
        <h2>Technology</h2>
        <ul>
    		<li><h3>Node.js + Socket.IO</h3></li>
			<li><h3>HTML5 + CSS3 + JS</h3></li>
			<li><h3>heroku</h3></li>
		</ul>
	</section>

    <section class="slide">
        <h2>できるようになったこと</h2>
        <ul>
        	<li><h4>WebSocketを使ったPush配信</h4></li>
			<li><h4>非同期I/Oで大量同時接続を処理</h4></li>
			<li><h4>HTML5でOne source multi use</h4></li>
            <li><h4>ハードウェアからの解放</h4></li>
            <li><h4>急な負荷時もすぐにスケールアウト</h4></li>
		</ul>
	</section>

    <section class="slide">
        <h1>One more thing</h1>
	</section>

    <section class="slide">
        <h2>現状のWebシステムの問題</h2>
        <ul>
            <li><h4>非リアルタイム</h4></li>
            <li><h4>負荷が高い</h4></li>
            <li><h4>使いにくい</h4></li>
            <li><h4>チャネルごとの実装</h4></li>
        </ul>
    </section>

    <section class="slide">
        <h1>失われた10年</h1>
    </section>

    <section class="slide">
        <h1>マルチデバイス対応<br />Webリッチクライアント</h1>
    </section>

    <section class="slide">
        <h2>リッチの特徴</h2>
        <ul>
            <li><h3>スピード</h3></li>
            <li><h3>操作性</h3></li>
            <li><h3>使いやすさ</h3></li>
        </ul>
    </section>

    <section class="slide">
        <h2>リッチの特徴をWebに</h2>
        <ul>
            <li><h4>PCに</h4></li>
            <li><h4>Macに</h4></li>
            <li><h4>スマホに</h4></li>
            <li><h4>タブレットに</h4></li>
        </ul>
    </section>

    <section class="slide">
        <h2>しかも</h2>
        <ul>
            <li><h3>速い</h3></li>
            <li><h3>メモリ使わない</h3></li>
            <li><h3>コスト小</h3></li>
        </ul>
    </section>

    <section class="slide">
        <h1>Webリッチでイノベーションを起こす</h1>
    </section>

    <section class="slide">
        <h1>開発計画を<br />ピッチします</h1>
    </section>

    <section class="slide">
        <h1>このまま普通の開発を続けるか、<br />それとも</h1>
    </section>

    <section class="slide">
        <h1>世界を変えるチャンスに賭けてみるか</h1>
    </section>

	<p class="deck-status">
		<span class="deck-status-current"></span>
		/
		<span class="deck-status-total"></span>
	</p>
</div>

<div class="likePanel">
    <div class="likeButtonContainer">
        <img id="likeButton" class="likeButton" src="/images/like_button.png" width="250" height="105" />
    </div>
	<div class="likeCounter" id="likeCounter">--</div>
</div>


<div class="connectionStatusArea">
    接続ステータス:<span id="connectionStatus">--</span>, 
	現在の接続数:<span id="connectionCount">--</span>
</div>

<script src="/javascripts/jquery-1.7.min.js"></script>
<script src="/javascripts/deck.js/deck.core.js"></script>
<script src="/javascripts/deck.js/deck.status.js"></script>
<script type="text/javascript" src="/socket.io/socket.io.v0.8.7.js"></script>
<script src="/javascripts/slide.js"></script>
<script src="/javascripts/status.js"></script>
<script src="/javascripts/like.js?<%= new Date().getTime() %>"></script>
<script src="/javascripts/chat.js?<%= new Date().getTime() %>"></script>

<script type="text/javascript">
$(function() {
    var socket = io.connect('<%= hostname %>');

    new SlideControl({
        socket : socket,
        admin : <%= admin %>
    });

    new LikePanel({
        socket : socket,
        selector : {
            button : "#likeButton",
            counter : "#likeCounter"
        }
    });

    new ConnectionStatus({
        socket : socket,
        selector : {
            status : "#connectionStatus",
            count : "#connectionCount",
            transport : "#connectionTransport"
        }
    });

});
</script>
